-- 1. Users
CREATE TABLE users
(
    id            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR2(255)       NOT NULL,
    email         VARCHAR2(255)       NOT NULL UNIQUE,
    password_hash VARCHAR2(255)       NOT NULL,
    is_admin      NUMBER(1) DEFAULT 0 NOT NULL,
    created_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. Parking Facilities
CREATE TABLE parking_facilities
(
    id            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    osm_id        NUMBER,
    name          VARCHAR2(255),
    latitude      NUMBER(9, 6)                   NOT NULL,
    longitude     NUMBER(9, 6)                   NOT NULL,
    capacity      NUMBER                         NOT NULL,
    type          VARCHAR2(20) DEFAULT 'surface' NOT NULL
        CHECK (type IN ('surface', 'underground', 'multi-storey', 'street_side')),
    fee           NUMBER(1)    DEFAULT 0         NOT NULL,
    opening_hours VARCHAR2(64),
    accessibility VARCHAR2(64),
    created_at    TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    updated_at    TIMESTAMP    DEFAULT CURRENT_TIMESTAMP
);

-- 3. Parking States (current occupancy)
CREATE TABLE parking_states
(
    facility_id    NUMBER PRIMARY KEY,
    occupied_count NUMBER NOT NULL,
    updated_at     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_state_facility
        FOREIGN KEY (facility_id)
            REFERENCES parking_facilities (id)
);

-- 4. Occupancy Logs (history for analytics)
CREATE TABLE occupancy_logs
(
    id             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    facility_id    NUMBER NOT NULL,
    occupied_count NUMBER NOT NULL,
    recorded_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_log_facility
        FOREIGN KEY (facility_id)
            REFERENCES parking_facilities (id)
);

-- 5. Reservations
CREATE TABLE reservations
(
    id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     NUMBER                         NOT NULL,
    facility_id NUMBER                         NOT NULL,
    start_time  TIMESTAMP                      NOT NULL,
    end_time    TIMESTAMP                      NOT NULL,
    status      VARCHAR2(20) DEFAULT 'PENDING' NOT NULL
        CHECK (status IN ('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED')),
    created_at  TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    updated_at  TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_res_user
        FOREIGN KEY (user_id)
            REFERENCES users (id),
    CONSTRAINT fk_res_facility
        FOREIGN KEY (facility_id)
            REFERENCES parking_facilities (id)
);

-- 6. Payments
CREATE TABLE payments
(
    id             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    reservation_id NUMBER                         NOT NULL,
    amount         NUMBER(10, 2)                  NOT NULL,
    method         VARCHAR2(64),
    status         VARCHAR2(20) DEFAULT 'PENDING' NOT NULL
        CHECK (status IN ('PENDING', 'COMPLETED', 'FAILED')),
    transaction_id VARCHAR2(255),
    paid_at        TIMESTAMP,
    created_at     TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_pay_res
        FOREIGN KEY (reservation_id)
            REFERENCES reservations (id)
);

-- 7. License Plate Records (optional LPR)
CREATE TABLE license_plate_records
(
    id             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    facility_id    NUMBER                         NOT NULL,
    license_plate  VARCHAR2(20)                   NOT NULL,
    entry_time     TIMESTAMP                      NOT NULL,
    exit_time      TIMESTAMP,
    fee_calculated NUMBER(10, 2),
    status         VARCHAR2(20) DEFAULT 'ENTERED' NOT NULL
        CHECK (status IN ('ENTERED', 'EXITED')),
    created_at     TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_lpr_facility
        FOREIGN KEY (facility_id)
            REFERENCES parking_facilities (id)
);
X